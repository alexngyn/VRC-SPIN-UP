{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\ncontroller_1 = Controller(PRIMARY)\ngps_21 = Gps(Ports.PORT21, 0.00, 0.00, MM, 180)\ngyro_a = Gyro(brain.three_wire_port.a)\nmotor_1 = Motor(Ports.PORT14, GearSetting.RATIO_18_1, False)\nmotor_2 = Motor(Ports.PORT15, GearSetting.RATIO_18_1, True)\nmotor_3 = Motor(Ports.PORT13, GearSetting.RATIO_18_1, False)\nmotor_4 = Motor(Ports.PORT20, GearSetting.RATIO_18_1, True)\nmotor_5 = Motor(Ports.PORT19, GearSetting.RATIO_18_1, False)\nmotor_6 = Motor(Ports.PORT18, GearSetting.RATIO_18_1, True)\nmotor_7 = Motor(Ports.PORT17, GearSetting.RATIO_18_1, False)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      Nationals Robot\n#\tAuthor:       Alex Nguyen\n#\tCreated:      2/9/2023\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\nmotor_1.spin(FORWARD)\nmotor_2.spin(FORWARD)\nmotor_3.spin(FORWARD)\nmotor_4.spin(FORWARD)\nmotor_5.spin(FORWARD)\nmotor_6.spin(FORWARD)\nmotor_7.set_velocity(200, RPM)\n\ndef set_motor_vec(ls=0,rs=0):\n    motor_1.set_velocity(ls, RPM)\n    motor_2.set_velocity(ls, RPM)\n    motor_3.set_velocity(ls, RPM)\n    motor_4.set_velocity(rs, RPM)\n    motor_5.set_velocity(rs, RPM)\n    motor_6.set_velocity(rs, RPM)\ndef drivetrain():\n    vs = controller_1.axis2.position() * 2\n    hs = controller_1.axis4.position() * 2\n    ls = vs-abs(hs) if hs < 0 else vs\n    rs = vs-abs(hs) if hs > 0 else vs\n    set_motor_vec(ls,rs)\ndef roller(): \n    if controller_1.buttonR2.pressing(): motor_7.spin_for(FORWARD, 180, DEGREES)\n    if controller_1.buttonL2.pressing(): motor_7.spin_for(REVERSE, 180, DEGREES)\ndef display():\n    controller_1.screen.clear_screen()\n    controller_1.screen.set_cursor(1, 1)\n    temp = (motor_1.temperature(PERCENT) + motor_2.temperature(PERCENT) + motor_3.temperature(PERCENT) + motor_4.temperature(PERCENT) + motor_5.temperature(PERCENT) + motor_6.temperature(PERCENT)) / 6\n    controller_1.screen.print(\"temp: \" + str(temp))\n    controller_1.screen.set_cursor(2, 1)\n    rpm = (motor_1.velocity(RPM) + motor_2.velocity(RPM) + motor_3.velocity(RPM) + motor_4.velocity(RPM) + motor_5.velocity(RPM) + motor_6.velocity(RPM))\n    controller_1.screen.print(\"rpm: \" + str(rpm))\n    controller_1.screen.set_cursor(3, 1)\n    trq = (motor_1.torque(TorqueUnits.NM) + motor_2.torque(TorqueUnits.NM)  + motor_3.torque(TorqueUnits.NM)  + motor_4.torque(TorqueUnits.NM)  + motor_6.torque(TorqueUnits.NM)  + motor_6.torque(TorqueUnits.NM)) / 6\n    controller_1.screen.print(\"torque: \" + str(trq))\n\ndef autonomous():\n    motor_1.spin_for(FORWARD, 300, DEGREES, wait=False)\n    motor_2.spin_for(FORWARD, 300, DEGREES, wait=False)\n    motor_3.spin_for(FORWARD, 300, DEGREES, wait=False)\n    motor_4.spin_for(FORWARD, 300, DEGREES, wait=False)\n    motor_5.spin_for(FORWARD, 300, DEGREES, wait=False)\n    motor_6.spin_for(FORWARD, 300, DEGREES, wait=False)\n    wait(2, SECONDS)\n    motor_7.spin_for(FORWARD, 120, DEGREES)\n    wait(1, SECONDS)\n    motor_1.spin_for(REVERSE, 200, DEGREES, wait=False)\n    motor_2.spin_for(REVERSE, 200, DEGREES, wait=False)\n    motor_3.spin_for(REVERSE, 200, DEGREES, wait=False)\n    motor_4.spin_for(REVERSE, 200, DEGREES, wait=False)\n    motor_5.spin_for(REVERSE, 200, DEGREES, wait=False)\n    motor_6.spin_for(REVERSE, 200, DEGREES, wait=False)\n    wait(1, SECONDS)\n    motor_4.spin_for(REVERSE, 600, DEGREES, wait=False)\n    motor_5.spin_for(REVERSE, 600, DEGREES, wait=False)\n    motor_6.spin_for(REVERSE, 600, DEGREES, wait=False)\n    wait(3, SECONDS)\n    motor_1.spin_for(REVERSE, 3000, DEGREES, wait=False)\n    motor_2.spin_for(REVERSE, 3000, DEGREES, wait=False)\n    motor_3.spin_for(REVERSE, 3000, DEGREES, wait=False)\n    motor_4.spin_for(REVERSE, 3000, DEGREES, wait=False)\n    motor_5.spin_for(REVERSE, 3000, DEGREES, wait=False)\n    motor_6.spin_for(REVERSE, 3000, DEGREES, wait=False)\n    while True:\n        display()\n        wait(1, MSEC)\ndef driver_control():\n    motor_1.spin(FORWARD)\n    motor_2.spin(FORWARD)\n    motor_3.spin(FORWARD)\n    motor_4.spin(FORWARD)\n    motor_5.spin(FORWARD)\n    motor_6.spin(FORWARD)\n    motor_1.set_max_torque(100,PERCENT)\n    motor_2.set_max_torque(100,PERCENT)\n    motor_3.set_max_torque(100,PERCENT)\n    motor_4.set_max_torque(100,PERCENT)\n    motor_5.set_max_torque(100,PERCENT)\n    motor_6.set_max_torque(100,PERCENT)\n    motor_7.set_velocity(200, RPM)\n    while True: \n        drivetrain()\n        roller()\n        display()\n        wait(1, MSEC)\ncompetition = Competition(driver_control, autonomous)","textLanguage":"python","rconfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[21],"name":"gps_21","customName":false,"deviceType":"GPS","deviceClass":"gps","setting":{"xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180","id":"partner"},"triportSourcePort":22},{"port":[1],"name":"gyro_a","customName":false,"deviceType":"Gyro","deviceClass":"gyro","setting":{"id":"partner"},"triportSourcePort":22},{"port":[14],"name":"motor_1","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[15],"name":"motor_2","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[13],"name":"motor_3","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[20],"name":"motor_4","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[19],"name":"motor_5","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[18],"name":"motor_6","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[17],"name":"motor_7","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22}],"slot":2,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}