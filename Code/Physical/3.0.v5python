{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\ninertial_1 = Inertial(Ports.PORT1)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:\n#\tAuthor:\n#\tCreated:\n#\tConfiguration:\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\ndef clr_scr():\n    brain.screen.set_fill_color(Color.BLACK)\n    brain.screen.clear_screen()\n    brain.screen.set_font(PROP60)\n    brain.screen.set_cursor(5,2)\n    brain.screen.print(\"76209M\")\n    brain.screen.set_cursor(7,2)\n    brain.screen.print(\"IMF\")\n\ndef pre_autonomous():\n    r,p = False, False\n    brain.screen.clear_screen()\n    brain.screen.set_font(MONO40)\n    brain.screen.set_cursor(3,2)\n    brain.screen.print(\"Roller\")\n    brain.screen.set_cursor(15,2)\n    brain.screen.print(\"Preload\")\n\n    brain.screen.set_fill_color(Color.RED)\n    brain.screen.draw_rectangle(340, 40, 100, 40)\n    brain.screen.draw_rectangle(40, 40, 100, 40)\n    brain.screen.set_cursor(4,2)\n    brain.screen.print(\"NO\")\n    brain.screen.set_cursor(18,2)\n    brain.screen.print(\"NO\")\n\n    brain.screen.set_fill_color(Color.WHITE)\n    brain.screen.draw_rectangle(120, 160, 200, 40)\n    brain.screen.set_pen_color(Color.BLACK)\n    brain.screen.set_cursor(10,5)\n    brain.screen.print(\"DONE\")\n    brain.screen.set_fill_color(Color.BLACK)\n    brain.screen.set_pen_color(Color.WHITE)\n    while True:\n        wait(1, MSEC)\n        if brain.screen.pressing():\n            if(40 < brain.screen.x_position() < 140 and 40 < brain.screen.y_position() < 80):\n                cc = Color.RED if r True else False\n                ms = \"NO\" if r True else \"YES\"\n                brain.screen.set_fill_color(cc)\n                brain.screen.draw_rectangle(40, 40, 100, 40)\n                brain.screen.set_cursor(4,2)\n                brain.screen.print(ms)\n            if(340 < brain.screen.x_position() < 440 and 40 < brain.screen.y_position() < 80):\n                cc = Color.RED if p True else False\n                ms = \"NO\" if p True else \"YES\"\n                brain.screen.set_fill_color(cc)\n                brain.screen.draw_rectangle(340, 40, 100, 40)\n                brain.screen.set_cursor(18,2)\n                brain.screen.print(ms)\n            if(120 < brain.screen.x_position() < 320 and 160 < brain.screen.y_position() < 200):\n                clr_scr()\n                break\ndef autonomous():\n    clr_scr()\n    while True:\n        wait(20, MSEC)\n\ndef user_control():\n    clr_scr()\n    while True:\n        wait(20, MSEC)\n\n# create competition instance\ncomp = Competition(user_control, autonomous)\npre_autonomous()\n","textLanguage":"python","rconfig":[{"port":[1],"name":"inertial_1","customName":false,"deviceType":"Inertial","deviceClass":"inertial","setting":{}}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}