{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\ncontroller_1 = Controller(PRIMARY)\ngps_21 = Gps(Ports.PORT21, 0.00, 0.00, MM, 180)\ngyro_a = Gyro(brain.three_wire_port.a)\nmotor_7 = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nmgr_motor_a = Motor(Ports.PORT6, GearSetting.RATIO_18_1, True)\nmgr_motor_b = Motor(Ports.PORT20, GearSetting.RATIO_18_1, False)\nmgr = MotorGroup(mgr_motor_a, mgr_motor_b)\nmgl_motor_a = Motor(Ports.PORT19, GearSetting.RATIO_18_1, False)\nmgl_motor_b = Motor(Ports.PORT5, GearSetting.RATIO_18_1, True)\nmgl = MotorGroup(mgl_motor_a, mgl_motor_b)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      Nationals Robot\n#\tAuthor:       Alex Nguyen\n#\tCreated:      2/9/2023\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\nmgl.spin(FORWARD)\nmgr.spin(FORWARD)\nmotor_7.set_velocity(200, RPM)\n\ndef set_motor_vec(ls=0,rs=0):\n    mgl.set_velocity(ls, RPM)\n    mgr.set_velocity(rs, RPM)\ndef drivetrain():\n    vs = controller_1.axis2.position() * 2\n    hs = controller_1.axis4.position() * 2\n    ls = vs-abs(hs) if hs < 0 else vs\n    rs = vs-abs(hs) if hs > 0 else vs\n    set_motor_vec(ls,rs)\ndef roller(): \n    if controller_1.buttonR2.pressing(): motor_7.spin_for(FORWARD, 180, DEGREES)\n    if controller_1.buttonL2.pressing(): motor_7.spin_for(REVERSE, 180, DEGREES)\ndef autonomous():\n    mgr.spin_for(FORWARD,360,DEGREES,wait=False)\n    mgl.spin_for(FORWARD,360,DEGREES,wait=False)\n    while True:\n        wait(1, MSEC)\n        print(\"Best code ever\")\ndef driver_control():\n    mgr.spin(FORWARD)\n    mgl.spin(FORWARD)\n    mgr.set_max_torque(100,PERCENT)\n    mgl.set_max_torque(100,PERCENT)\n    motor_7.set_velocity(200, RPM)\n    while True: \n        drivetrain()\n        roller()\n        wait(1, MSEC)\ncompetition = Competition(driver_control, autonomous)","textLanguage":"python","rconfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[21],"name":"gps_21","customName":false,"deviceType":"GPS","deviceClass":"gps","setting":{"xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180","id":"partner"},"triportSourcePort":22},{"port":[1],"name":"gyro_a","customName":false,"deviceType":"Gyro","deviceClass":"gyro","setting":{"id":"partner"},"triportSourcePort":22},{"port":[1],"name":"motor_7","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[6,20],"name":"mgr","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"false"}},{"port":[19,5],"name":"mgl","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"false","motor_b_reversed":"true"}}],"slot":2,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}